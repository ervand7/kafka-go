services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LOG_CLEANUP_POLICY=compact
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG_RETENTION_HOURS=24
    ports:
      - "9092:9092"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  producer:
    build: .
    container_name: producer
    depends_on:
      - kafka
    environment:
      - TOPIC=orders
    # default CMD in Dockerfile already runs ./cmd/producer/main.go
    volumes:
      - .:/app

  consumer:
    build: .
    depends_on:
      - kafka
    environment:
      - TOPIC=orders
    command: go run ./cmd/consumer/main.go   # ⬅️ run the consumer code instead
    volumes:
      - .:/app

  processor:
    build: .
    depends_on:
      - kafka
    command: go run ./cmd/processor/main.go
    volumes:
      - .:/app

  reporter:
    build: .
    depends_on:
      - kafka
    command: go run ./cmd/reporter/main.go
    volumes:
      - .:/app

  console:
    image: redpandadata/console:latest
    container_name: kafka-console
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "8080:8080"

  dlq-viewer:
    image: python:3.12-alpine
    depends_on: [kafka]
    volumes: ["./:/app"]
    working_dir: /app
    command: >
      sh -c "pip install --no-cache kafka-python &&
             python dlq_viewer.py"
    stdin_open: true   # needed for interactive input
    tty: true
